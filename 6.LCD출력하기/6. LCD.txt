#include <avr/io.h>

void Delay_us(char time_us)
{
	char i;
	
	for(i=0;i<time_us;i++){
		asm volatile(" PUSH R0 " );
		asm volatile(" POP  R0 " );
		asm volatile(" PUSH R0 " );
		asm volatile(" POP  R0 " );
		asm volatile(" PUSH R0 " );
		asm volatile(" POP  R0 " );
	}
}


void Delay_ms(unsigned int time_ms)
{
	unsigned int i;
	
	for(i=0; i<time_ms; i++){
		Delay_us(250);
		Delay_us(250);
		Delay_us(250);
		Delay_us(250);
	}
}

void lcd_write(char c)
{
	PORTA = c;
	PORTG |= 0x04; 
	Delay_us(1);
	PORTG &= 0xFB;
	Delay_us(250);
}

void cursor_off(void)
{
	PORTG &= 0x7F;
	Delay_ms(200);
	lcd_write(0x0C);
	Delay_ms(100);
}

void cursor_on(void)
{
	
	PORTG &= 0xFE;
	Delay_ms(200);
	lcd_write(0x0F);
	Delay_ms(100);
}

void lcd_clear(void)
{
	PORTG &= 0xFE;
	Delay_us(1);
	lcd_write(0x01);
	Delay_ms(4);
}

void lcd_init(void)
{
	PORTG &= 0xFE;
	Delay_ms(200);
	lcd_write(0x38);
	lcd_write(0x0F);
	lcd_write(0X01);
	Delay_ms(100);
}

void lcd_gotoxy(unsigned char x, unsigned char y){
	PORTG &= 0xFE;
	Delay_us(1);
	if(y==0) lcd_write(0x80 + x);
	else lcd_write(0xC0 + x);
	}

void lcd_puts(char *s)
{
	PORTG |= 0x01;
	Delay_us(1);
	
	while(*s)
		lcd_write(*s++);
}

void lcd_putch(char c)
{
	PORTG |=0x01;
	Delay_us(1);
	PORTA = c;
	
	PORTG |=0x04;
	Delay_us(1);
	PORTG &=0xFB;
	Delay_us(250);
}

int main(void)
{
	DDRA = 0xFF;
	PORTA = 0xFF;
	
	DDRG=0xFF;
	PORTG=0x00;
	
	lcd_init();
	cursor_off();
    /* Replace with your application code */
    while (1) 
    {
		lcd_clear();
		lcd_gotoxy(0,0);
		lcd_puts("   [ LCD Test ]   ");
		
		Delay_ms(1000);
		
		lcd_clear();
		lcd_gotoxy(0,1);
		lcd_puts("0123456789ABCDEF");
		
		Delay_ms(1000);
    }
}

